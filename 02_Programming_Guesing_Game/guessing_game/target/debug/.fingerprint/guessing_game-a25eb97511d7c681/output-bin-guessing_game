{"message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":136,"byte_end":157,"line_start":7,"line_end":7,"column_start":26,"column_end":47,"is_primary":true,"text":[{"text":"   let data_file = match data_result (a : i32) -> i32 {","highlight_start":26,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `data_result` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":148,"byte_end":149,"line_start":7,"line_end":7,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"   let data_file = match data_result (a : i32) -> i32 {","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":156,"byte_end":157,"line_start":7,"line_end":7,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"   let data_file = match data_result (a : i32) -> i32 {","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `data_result` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":149,"byte_end":153,"line_start":7,"line_end":7,"column_start":39,"column_end":43,"is_primary":true,"text":[{"text":"   let data_file = match data_result (a : i32) -> i32 {","highlight_start":39,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   let data_file = match data_result (a : i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `data_result` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   let data_file = match data_result \u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0ma : i32\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `data_result` is a function, use the arguments directly\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m   let data_file = match data_result (\u001b[0m\u001b[0m\u001b[38;5;9ma : \u001b[0m\u001b[0mi32) -> i32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m   let data_file = match data_result (i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"expected one of `.`, `?`, `{`, or an operator, found `->`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":158,"byte_end":160,"line_start":7,"line_end":7,"column_start":48,"column_end":50,"is_primary":true,"text":[{"text":"   let data_file = match data_result (a : i32) -> i32 {","highlight_start":48,"highlight_end":50}],"label":"expected one of `.`, `?`, `{`, or an operator","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":130,"byte_end":135,"line_start":7,"line_end":7,"column_start":20,"column_end":25,"is_primary":false,"text":[{"text":"   let data_file = match data_result (a : i32) -> i32 {","highlight_start":20,"highlight_end":25}],"label":"while parsing this `match` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `.`, `?`, `{`, or an operator, found `->`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:48\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   let data_file = match data_result (a : i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `.`, `?`, `{`, or an operator\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing this `match` expression\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
